{"version":3,"sources":["assets/imgs/kamall_food_logo.jpg","core/components/Button.js","core/components/modals/Modal.js","assets/imgs/profile.png","api/calls.js","core/components/Snack.js","core/components/Forms/SignUpForm.js","core/components/modals/templates/SignUpModalTemplate.js","core/components/Forms/ForgetPasswordForm.js","core/components/modals/templates/ForgetPasswordTemplate.js","core/components/Forms/LoginForm.js","core/components/modals/templates/LoginModalTemplate.js","core/components/modals/templates/MenuTemplate.js","core/components/page/Header.js","core/components/page/Footer.js","views/Home/Home.js","App.js","reportWebVitals.js","i18n.js","index.js"],"names":["Button","textColor","shape","backgroundColor","textSize","type","children","onClick","disabled","styleBuilder","Object","assign","border","color","fontSize","borderRadius","padding","style","className","BModal","template","show","setModalState","onHide","Header","closeButton","Title","title","Body","body","Footer","variant","TModal","setSelected","Template","Modal","undefined","baseApi","axios","create","baseURL","headers","interceptors","request","use","req","error","Promise","reject","Snack","vertical","horizontal","handleClose","open","message","useTranslation","t","success","Alert","onClose","severity","sx","width","Stack","spacing","Snackbar","autoHideDuration","anchorOrigin","SignUpForm","useState","openSnackbar","setOpenSnackbar","loading","setLoading","SignupSchema","Yup","firstname","min","max","required","lastname","email","password","matches","onSubmit","values","a","post","then","res","data","catch","err","event","reason","useEffect","setTimeout","MenuTemplate","name","Card","initialValues","validationSchema","errors","touched","id","CardBody","FormGroup","Label","marginRight","LoginModalTemplate","href","SignUpModalTemplate","ForgetPassword","ForgetPasswordSchema","console","log","as","ForgetPasswordModalTemplate","ForgetPasswordForm","LoginForm","LoginSchema","src","ProfilePng","alt","modals","modalState","selected","Kamalogo","size","icon","faCogs","findIndex","el","Home","App","useCookies","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","options","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","cookieMinutes","cookieDomain","htmlTag","document","documentElement","checkWhitelist","i18n","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","detection","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback","Skeleton","animation","CookiesProvider","getElementById"],"mappings":"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","file":"static/js/main.949318a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kamall_food_logo.4a77a783.jpg\";","import React from \"react\";\r\n\r\nconst Button = ({\r\n                    textColor = \"#FFFFFF\",\r\n                    shape = ('square' | 'round' | 'oval'),\r\n                    backgroundColor = \"#125fca\",\r\n                    textSize,\r\n                    type = \"text\",\r\n                    children,\r\n                    onClick,\r\n                    disabled,\r\n                }) => {\r\n\r\n    const isRound = {\r\n        borderRadius: '12px',\r\n    }\r\n\r\n    const isSquare = {\r\n        padding: '15px 32px',\r\n    }\r\n\r\n    const isOval = {\r\n        borderRadius: '50%',\r\n    }\r\n\r\n    const styleBuilder = Object.assign({}, {\r\n        backgroundColor: disabled ? \"#bcccd7\" : backgroundColor,\r\n        border : disabled ? \"1px solid #0066cc\" : \"\",\r\n        color: disabled ? \"white\" : textColor,\r\n        fontSize: textSize\r\n    }, (shape === 1 ? isOval : shape === 2 ? isRound : isSquare));\r\n\r\n    return (\r\n        <button\r\n            style={styleBuilder}\r\n            className=\"button-square\"\r\n            type={type}\r\n            color={textColor}\r\n            onClick={onClick}\r\n            disabled={disabled ?? false}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"../Button\";\r\nimport BootstrapModal from \"react-bootstrap/Modal\"\r\n\r\n// Bootstrap default Modal\r\nconst BModal = ({template, show, setModalState}) => (\r\n    <>\r\n        <BootstrapModal show={show} onHide={() => setModalState(false)}>\r\n            <BootstrapModal.Header closeButton>\r\n                <BootstrapModal.Title>{template.title}</BootstrapModal.Title>\r\n            </BootstrapModal.Header>\r\n            <BootstrapModal.Body>{template.body}</BootstrapModal.Body>\r\n            <BootstrapModal.Footer>\r\n                <Button variant=\"danger\" onClick={() => setModalState(false)} backgroundColor=\"#FF605C\">\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => setModalState(false)}>\r\n                    Save Changes\r\n                </Button>\r\n            </BootstrapModal.Footer>\r\n        </BootstrapModal>\r\n    </>\r\n)\r\n\r\n//Full template bootstrap Modal\r\nconst TModal = ({template, show, setModalState, setSelected}) => {\r\n    const Template = template;\r\n\r\n    return (\r\n        <BootstrapModal show={show} onHide={() => setModalState(false)}>\r\n            {<Template setModalState={setModalState} setSelected={setSelected}/>}\r\n        </BootstrapModal>\r\n    )\r\n}\r\n\r\nconst Modal = ({template, setModalState, show, setSelected}) => {\r\n    if (template?.title !== undefined || template?.body !== undefined)\r\n        return <BModal show={show} template={template} setModalState={setModalState}/>\r\n\r\n    return <TModal show={show} template={template} setModalState={setModalState} setSelected={setSelected}/>\r\n}\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/profile.7592b515.png\";","import axios from 'axios'\r\n//import { useCookies } from 'react-cookie';\r\n\r\nconst baseUrl = \"https://localhost:49155/\";\r\n\r\nconst baseApi = axios.create({\r\n    baseURL: baseUrl,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"*/*\",\r\n    },\r\n});\r\n\r\nbaseApi.interceptors.request.use(req => {\r\n    return req;\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport {baseApi}\r\n","import * as React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport {Alert, Stack} from \"@mui/material\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nexport default function Snack({vertical, horizontal, handleClose, open, message}) {\r\n    const [t] = useTranslation();\r\n\r\n    const success = (\r\n        <Alert onClose={handleClose} severity=\"success\" sx={{width: '100%'}}>\r\n            {t(`${message}`)}\r\n        </Alert>\r\n    );\r\n\r\n    return (\r\n        <Stack spacing={2} sx={{width: '100%'}}>\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={4000}\r\n                onClose={handleClose}\r\n                message={message}\r\n                anchorOrigin={{ vertical, horizontal }}\r\n            >\r\n                {success}\r\n            </Snackbar>\r\n\r\n        </Stack>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Card, CardBody, FormGroup, Label} from \"reactstrap\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Button from \"../Button\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport LoginModalTemplate from \"../modals/templates/LoginModalTemplate\";\r\nimport {baseApi} from \"../../../api/calls\";\r\nimport Snack from \"../Snack\";\r\nimport MenuTemplate from \"../modals/templates/MenuTemplate\";\r\n\r\nconst SignUpForm = ({setSelected}) => {\r\n    const [t] = useTranslation();\r\n    const [openSnackbar, setOpenSnackbar] = useState([false, \"\"]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const SignupSchema = Yup.object({\r\n        firstname: Yup.string().min(3).max(40).required(),\r\n        lastname: Yup.string().min(3).max(40).required(),\r\n        email: Yup.string().email().required('Required'),\r\n        password: Yup.string()\r\n            .required('No password provided.')\r\n            .min(8, 'Password is too short - should be 8 chars minimum.')\r\n            .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.')\r\n    });\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const onSubmit = async values => {\r\n        setLoading(true);\r\n        await baseApi.post('Users/register', values).then(res => {\r\n            setLoading(false)\r\n            setOpenSnackbar([true, res.data.message]);\r\n        }).catch((err) => {\r\n            setLoading(false);\r\n            setOpenSnackbar([true, \"An error has occured\"]);\r\n        })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenSnackbar([false, openSnackbar[1]]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(openSnackbar[0]){\r\n             setTimeout(() => {\r\n                 setSelected(MenuTemplate.name);\r\n             }, 5000);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Card>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={SignupSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {({errors, touched}) => (\r\n                    <Card id=\"login-signup-body\">\r\n                        <CardBody>\r\n                            <div className=\"buttons-fg\">\r\n                                <Button textColor=\"#000000\"\r\n                                        backgroundColor=\"#e7e7e7\"\r\n                                        textSize=\"15px\"\r\n                                >\r\n                                    <i className=\"fa fa-google fa-lg\"/>\r\n                                    {t('Se connecter avec Google')}\r\n                                </Button>\r\n                                <Button textColor=\"#FFFFFF\"\r\n                                        backgroundColor=\"#125fca\"\r\n                                        textSize=\"15px\"\r\n                                >\r\n                                    {t('Se connecter avec Meta')}\r\n                                </Button>\r\n                            </div>\r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <Label>{t('Prénom')}</Label>\r\n                                    <Field className=\"field\" name=\"firstname\" type=\"string\"/>\r\n                                    {errors.firstname && touched.firstname ?\r\n                                        <div className=\"errs\">{t(`${errors.firstname}`)}</div> : null}\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label>{t('Nom')}</Label>\r\n                                    <Field className=\"field\" name=\"lastname\" type=\"string\"/>\r\n                                    {errors.lastname && touched.lastname ?\r\n                                        <div className=\"errs\">{t(`${errors.lastname}`)}</div> : null}\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label>{t('Email')}</Label>\r\n                                    <Field className=\"field\" name=\"email\" type=\"email\"/>\r\n                                    {errors.email && touched.email ?\r\n                                        <div className=\"errs\">{t(`${errors.email}`)}</div> : null}\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label>{t('Mot de passe')}</Label>\r\n                                    <Field className=\"field\" name=\"password\" type=\"password\"/>\r\n                                    {errors.password && touched.password ? (\r\n                                        <div className=\"errs\">{t(`${errors.password}`)}</div>\r\n                                    ) : null}\r\n                                </FormGroup>\r\n                                <div className=\"bottom-login-signup\">\r\n                                    <Button disabled={loading} className=\"square-button\"\r\n                                            type=\"submit\">\r\n                                        {loading && (\r\n                                            <i\r\n                                                className=\"fa fa-refresh fa-spin\"\r\n                                                style={{ marginRight: \"5px\" }}\r\n                                            />\r\n                                        )}\r\n                                        {!loading && t('Créer un compte')}\r\n                                        {loading && t('Création')}\r\n                                    </Button>\r\n                                    <a onClick={() => setSelected(LoginModalTemplate.name)}\r\n                                       href=\"#login\">{t('J\\'ai déja un compte')}</a>\r\n                                    <Snack handleClose={handleClose} vertical=\"bottom\" horizontal=\"center\" open={openSnackbar[0]} message={openSnackbar[1]}/>\r\n                                </div>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                )}\r\n            </Formik>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React from \"react\";\r\nimport SignUpForm from \"../../Forms/SignUpForm\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst SignUpModalTemplate = ({setSelected}) => {\r\n    const [t] = useTranslation();\r\n    return (\r\n        <div className=\"signup\">\r\n            <h3>{t('S\\'inscrire')}</h3>\r\n            <SignUpForm setSelected={setSelected}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpModalTemplate;\r\n","import React from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport * as Yup from \"yup\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {Card} from \"react-bootstrap\";\r\nimport {CardBody, FormGroup, Label} from \"reactstrap\";\r\nimport Button from \"../Button\";\r\nimport MenuTemplate from \"../modals/templates/MenuTemplate\";\r\n\r\nconst ForgetPassword = ({setSelected}) => {\r\n    const [t] = useTranslation();\r\n\r\n    const ForgetPasswordSchema = Yup.object().shape({\r\n        email: Yup.string().email('Invalid email').required('Required')\r\n    });\r\n\r\n    const initialValues = {\r\n        email: ''\r\n    }\r\n\r\n    const onSubmit = values => {\r\n        console.log(values);\r\n    }\r\n\r\n    return (\r\n        <Card className=\"login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={ForgetPasswordSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {({errors, touched}) =>\r\n                    (\r\n                        <Card id=\"login-signup-body\">\r\n                            <CardBody>\r\n                                <Form className=\"form-login\">\r\n                                    <FormGroup className=\"\">\r\n                                        <Label>{t('Email')}</Label>\r\n                                        <Field as=\"input\" className=\"field\" name=\"email\" type=\"email\"/>\r\n                                        {errors.email && touched.email ?\r\n                                            <div className=\"errs\">{t(`${errors.email}`)}</div> : null}\r\n                                    </FormGroup>\r\n                                    <div className=\"bottom-login-signup\">\r\n                                        <Button className=\"square-button\" textSize=\"15px\" textColor=\"white\"\r\n                                                type=\"submit\">{t('Envoyer')}</Button>\r\n                                        <a onClick={() => setSelected(MenuTemplate.name)} href=\"#home\">{t('Retour')}</a>\r\n                                    </div>\r\n                                </Form>\r\n                            </CardBody>\r\n                        </Card>\r\n                    )}\r\n            </Formik>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ForgetPassword;\r\n","import React from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport ForgetPasswordForm from \"../../Forms/ForgetPasswordForm\";\r\n\r\nconst ForgetPasswordModalTemplate = ({setSelected}) => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <div className=\"forget-password\">\r\n            <h4 className=\"title-forget-password\">{t('Réinitialiser le mot de passe')}</h4>\r\n            <ForgetPasswordForm setSelected={setSelected}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgetPasswordModalTemplate;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Card, CardBody, FormGroup, Label} from \"reactstrap\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Button from \"../Button\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport SignUpModalTemplate from \"../modals/templates/SignUpModalTemplate\";\r\nimport ForgetPasswordModalTemplate from \"../modals/templates/ForgetPasswordTemplate\";\r\nimport {baseApi} from \"../../../api/calls\";\r\nimport Snack from \"../Snack\";\r\nimport MenuTemplate from \"../modals/templates/MenuTemplate\";\r\n\r\nconst LoginForm = ({setSelected}) => {\r\n    const [t] = useTranslation();\r\n    const [loading, setLoading] = useState(false);\r\n    const [openSnackbar, setOpenSnackbar] = useState([false, \"Connexion Réussi\"]);\r\n\r\n    const LoginSchema = Yup.object().shape({\r\n        email: Yup.string().email().required('Required'),\r\n        password: Yup.string()\r\n            .required('No password provided.')\r\n            .min(8, 'Password is too short - should be 8 chars minimum.')\r\n            .matches(\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\",\r\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase and One Number\")\r\n    });\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const onSubmit = async values => {\r\n        setLoading(true);\r\n        await baseApi.post('Users/login', values).then(res => {\r\n            setLoading(false);\r\n            setOpenSnackbar([true, \"Successfully Authenticated\"])\r\n        }).catch(async err => {\r\n            setLoading(false);\r\n            setOpenSnackbar([true, \"An error has occurred\"])\r\n        })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenSnackbar([false, openSnackbar[1]]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(openSnackbar[0]){\r\n            setTimeout(() => {\r\n                setSelected(MenuTemplate.name);\r\n            }, 5000);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Card>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={LoginSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {({errors, touched}) => (\r\n                    <Card id=\"login-signup-body\">\r\n                        <CardBody>\r\n                            <div className=\"buttons-fg\">\r\n                                <Button textColor=\"#000000\"\r\n                                        backgroundColor=\"#e7e7e7\"\r\n                                        textSize=\"15px\">\r\n                                    <i className=\"fa fa-google fa-lg\"/>\r\n                                    {t('Se connecter avec Google')}\r\n                                </Button>\r\n                                <Button textColor=\"#FFFFFF\"\r\n                                        backgroundColor=\"#125fca\"\r\n                                        textSize=\"15px\">\r\n                                    {t('Se connecter avec Meta')}\r\n                                </Button>\r\n                            </div>\r\n                            <Form className=\"form-login\">\r\n                                <FormGroup>\r\n                                    <Label>{t('Email')}</Label>\r\n                                    <Field as=\"input\" className=\"field\" name=\"email\" type=\"email\"/>\r\n                                    {errors.email && touched.email ?\r\n                                        <div className=\"errs\">{t(`${errors.email}`)}</div> : null}\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <div className=\"mdp-login\">\r\n                                        <Label>{t('Mot de passe')}</Label>\r\n                                        <a href=\"#forgot\"\r\n                                           onClick={() => setSelected(ForgetPasswordModalTemplate.name)}>{t('Mot de passe oublié ?')}</a>\r\n                                    </div>\r\n                                    <Field as=\"input\" className=\"field\" name=\"password\" type=\"password\"/>\r\n                                    {errors.password && touched.password ? (\r\n                                        <div className=\"errs\">{t(`${errors.password}`)}</div>\r\n                                    ) : null}\r\n                                </FormGroup>\r\n                                <div className=\"bottom-login-signup\">\r\n                                    <Button disabled={loading} className=\"square-button\" textSize=\"15px\" textColor=\"white\"\r\n                                            type=\"submit\">\r\n                                        {loading && (\r\n                                            <i\r\n                                                className=\"fa fa-refresh fa-spin\"\r\n                                                style={{ marginRight: \"5px\" }}\r\n                                            />\r\n                                        )}\r\n                                        {!loading &&  t('Se connecter')}\r\n                                        {loading && t('Connexion en cours...')}\r\n\r\n                                    </Button>\r\n                                    <a onClick={() => setSelected(SignUpModalTemplate.name)}\r\n                                       href=\"#register\">{t('Créer un compte')}</a>\r\n                                    <Snack handleClose={handleClose} vertical=\"bottom\" horizontal=\"center\" open={openSnackbar[0]} message={openSnackbar[1]}/>\r\n                                </div>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                )}\r\n            </Formik>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport LoginForm from \"../../Forms/LoginForm\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst LoginModalTemplate = ({setSelected}) => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <h4 className=\"title-login\">{t('Se connecter')}</h4>\r\n            <LoginForm setSelected={setSelected}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginModalTemplate;\r\n","import React from \"react\";\r\nimport ProfilePng from \"../../../../assets/imgs/profile.png\"\r\nimport {useTranslation} from 'react-i18next';\r\nimport LoginModalTemplate from \"./LoginModalTemplate\";\r\nimport SignUpModalTemplate from \"./SignUpModalTemplate\";\r\n\r\nconst MenuTemplate = ({setModalState, setSelected}) => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <div className=\"menu-template\">\r\n            <section className=\"top-content\">\r\n                <img className=\"default-profile\" src={ProfilePng} alt=\"Profile Png\"/>\r\n                <div className=\"profile-data\">\r\n                    <span id=\"myaccount\" href=\"#myaccount\">{t('Mon Compte')}</span>\r\n                    <a href=\"#personnaldata\">\r\n                        <span id=\"personnaldata\">{t('Voir mes données personnelles')}</span>\r\n                    </a>\r\n                </div>\r\n                <span onClick={() => setModalState(false)} className=\"close-button\">X</span>\r\n            </section>\r\n            <section className=\"bottom-content\">\r\n                <section className=\"login-signup-container\">\r\n                    <a onClick={() => setSelected(LoginModalTemplate.name)} href=\"#login\" className=\" square-a\">\r\n                        {t('Se connecter')} </a>\r\n                    <a onClick={() => setSelected(SignUpModalTemplate.name)} href=\"#register\"\r\n                       className=\"square-a\">\r\n                        {t('Créer un compte')} </a>\r\n                </section>\r\n\r\n                <ul className=\"atom-list\">\r\n                    <li className=\"orders\"><a href=\"#orders\">\r\n                        {t('Commandes')} </a>\r\n                    </li>\r\n                    <li className=\"favourites\"><a href=\"#favourites\">\r\n                        {t('Favoris')} </a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"atom-list\">\r\n                    <li className=\"points\"><a href=\"#points\">\r\n                        {t('Points')} </a></li>\r\n                    <li className=\"stampcard\"><a href=\"#card\">\r\n                        {t('Carte de fidélité')} </a></li>\r\n                    <li className=\"help\"><a href=\"#help\">\r\n                        {t('Besoin d\\'aide ?')} </a></li>\r\n                    {/*<li><a href=\"#login\" className=\"login\" >\r\n                        {t('Se connecter')} </a></li>*/}\r\n                </ul>\r\n\r\n                <ul className=\"atom-list\">\r\n                    <li className=\"country\"><a href=\"#country\">\r\n                        {t('Pays')} </a></li>\r\n                    <li className=\"language\"><a href=\"#language\">\r\n                        {t('Langue')} </a></li>\r\n                </ul>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuTemplate;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Kamalogo from \"../../../assets/imgs/kamall_food_logo.jpg\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCogs} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from \"../modals/Modal\";\r\nimport MenuTemplate from \"../modals/templates/MenuTemplate\";\r\nimport LoginModalTemplate from \"../modals/templates/LoginModalTemplate\";\r\nimport SignUpModalTemplate from \"../modals/templates/SignUpModalTemplate\";\r\nimport ForgetPasswordModalTemplate from \"../modals/templates/ForgetPasswordTemplate\";\r\n\r\nconst modals = [MenuTemplate, LoginModalTemplate, SignUpModalTemplate, ForgetPasswordModalTemplate];\r\n\r\nconst Header = () => {\r\n    const [modalState, setModalState] = useState(false);\r\n    const [selected, setSelected] = useState(\"MenuTemplate\"); // selected modal template\r\n\r\n    useEffect(() => {\r\n        if (!modalState)\r\n            setSelected(\"MenuTemplate\")\r\n    }, [modalState, selected])\r\n\r\n    const handleParamsClick = () => {\r\n        if (!modalState)\r\n            setModalState(true);\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={Kamalogo} alt=\"home logo\"/>\r\n            <FontAwesomeIcon className=\"icon\" size=\"2x\" icon={faCogs} onClick={handleParamsClick}/>\r\n            {modalState === true ?\r\n                <div>\r\n                    <Modal\r\n                        template={modals[modals.findIndex(el => el.name === selected) === -1 ? 0 : modals.findIndex(el => el.name === selected)]}\r\n                        show={modalState}\r\n                        setModalState={setModalState}\r\n                        setSelected={setSelected}\r\n                    />\r\n            </div>\r\n\r\n                : null}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport Kamalogo from \"../../../assets/imgs/kamall_food_logo.jpg\"\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst Footer = () => {\r\n    const [t] = useTranslation();\r\n    return (\r\n        <footer>\r\n            <div>\r\n                <img id=\"logo\" src={Kamalogo} alt=\"footer logo\"/>\r\n            </div>\r\n            <div id=\"infos\">\r\n                <div id=\"footer-first\">\r\n                    <p>{t('A PROPOS DE KAMALL FOODS')}</p>\r\n                    <p>{t('Politiques de confidentialité')}</p>\r\n                    <p>{t('Conditions d\\'utilisation')}s</p>\r\n                    <p>{t('Politiques de livraison')}</p>\r\n                </div>\r\n                <div id=\"footer-second\">\r\n                    <p>{t('OBTENIR DE L\\'AIDE')}</p>\r\n                    <p>{t('Créer un compte professionnel')}</p>\r\n                    <p>{t('Consulter la FAQ\\'s')}</p>\r\n                    <p>{t('Contactez - nous')}</p>\r\n                </div>\r\n            </div>\r\n            <div id=\"copyright\">Kamall Foods 2021 ©</div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Header from \"../../core/components/page/Header\";\r\nimport Footer from \"../../core/components/page/Footer\";\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Footer/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import './assets/scss/index.scss';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {useEffect} from \"react\";\nimport Home from \"./views/Home/Home\";\nimport {useCookies} from \"react-cookie\";\n\nfunction App() {\n    const [cookies, setCookie] = useCookies([\"user\"]);\n\n    useEffect(() => {\n\n    }, [])\n\n    const cookieHandler = () => {\n        setCookie(\"user\")\n    }\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" exact component={Home}/>\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\r\nimport Backend from 'i18next-xhr-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport {initReactI18next} from 'react-i18next';\r\n\r\nconst fallbackLng = ['en'];\r\nconst availableLanguages = ['fr', 'en'];\r\n\r\nconst options = {\r\n    // order and from where user language should be detected\r\n    order: ['navigator', 'htmlTag', 'path', 'subdomain'],\r\n\r\n    // keys or params to lookup language from\r\n    lookupQuerystring: 'lng',\r\n    lookupCookie: 'i18next',\r\n    lookupLocalStorage: 'i18nextLng',\r\n    lookupFromPathIndex: 0,\r\n    lookupFromSubdomainIndex: 0,\r\n\r\n    // cache user language on\r\n    caches: ['localStorage', 'cookie'],\r\n    excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\r\n\r\n    // optional expire and domain for set cookie\r\n    cookieMinutes: 10,\r\n    cookieDomain: 'myDomain',\r\n\r\n    // optional htmlTag with lang attribute, the default is:\r\n    htmlTag: document.documentElement,\r\n\r\n    // only detect languages that are in the whitelist\r\n    checkWhitelist: true\r\n}\r\n\r\ni18n\r\n    .use(Backend) // load translation using xhr -> see /public/locales. We will add locales in the next step\r\n\r\n    .use(LanguageDetector) // detect user language\r\n\r\n    .use(initReactI18next) // pass the i18n instance to react-i18next.\r\n\r\n    .init({\r\n        fallbackLng, // if user computer language is not on the list of available languages, than we will be using the fallback language specified earlier\r\n        debug: true,\r\n        whitelist: availableLanguages,\r\n        detection: options,\r\n\r\n        interpolation: {\r\n            escapeValue: false\r\n        },\r\n    });\r\nexport default i18n;\r\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\nimport {Skeleton} from \"@mui/material\";\nimport { CookiesProvider } from \"react-cookie\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Suspense fallback={<Skeleton animation=\"wave\" />}>\n            <CookiesProvider>\n                <App/>\n            </CookiesProvider>\n        </Suspense>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}